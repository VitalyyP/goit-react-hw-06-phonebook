{"version":3,"sources":["App.module.css","components/Form/Form.module.css","components/Contact/Contact.module.css","components/Container/Container.module.css","redux/reducer.js","data/data.js","redux/store.js","redux/actions.js","components/Form/Form.jsx","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Container/Container.js","App.jsx","index.js"],"names":["module","exports","initialState","id","name","number","contactReducer","createReducer","addContact","state","payload","removeContact","filter","contact","filterReducer","handleInputChange","_","persistConfig","key","version","storage","blacklist","contactsAllReducer","combineReducers","items","persistedReducer","persistReducer","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","addContactAction","createAction","removeContactAction","filterContactAction","Form","useState","setName","setNumber","dispatch","useDispatch","useSelector","event","currentTarget","value","onSubmit","preventDefault","data","some","toLowerCase","alert","Date","now","type","pattern","required","onChange","className","s","button","Filter","Contact","item","onClick","ContactList","allContacts","normalizedFilter","includes","getVisibleContacts","map","Container","children","container","App","contactsTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da0f3463.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsTitle\":\"App_contactsTitle__31lJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__lcHRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__1xTdI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2qR3g\"};","import { createReducer } from '@reduxjs/toolkit';\r\nimport { data } from '../data/data';\r\n\r\nconst initialState = [...data];\r\n\r\nexport const contactReducer = createReducer(initialState, {\r\n  addContact: (state, { payload }) => [...state, payload],\r\n  removeContact: (state, { payload }) => state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nexport const filterReducer = createReducer('', {\r\n  handleInputChange: (_, { payload }) => payload,\r\n});\r\n\r\n//------------------- Without Redux Toolkit--------------------------\r\n\r\n// import { combineReducers } from 'redux';\r\n// import { data } from '../data/data';\r\n// import { ADD, REMOVE, FILTER } from './types';\r\n\r\n// const initialState = [...data];\r\n\r\n// const contactReducer = (state = initialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case ADD:\r\n//       return [...state, payload];\r\n\r\n//     case REMOVE:\r\n//       return state.filter(contact => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const contactsReducer = combineReducers({\r\n//   items: contactReducer,\r\n//   filter: filterReducer,\r\n// });\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// export default rootReducer;\r\n\r\n//-------------------------------------------------------------------\r\n","export let data = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { contactReducer, filterReducer } from './reducer';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  version: 1,\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst contactsAllReducer = combineReducers({\r\n  items: contactReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, contactsAllReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistedReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n//------------------- Without Redux Toolkit--------------------------\r\n\r\n// import { createStore } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import rootReducer from './reducer';\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n\r\n//-------------------------------------------------------------------\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactAction = createAction('addContact');\r\nexport const removeContactAction = createAction('removeContact');\r\nexport const filterContactAction = createAction('handleInputChange');\r\n\r\n//------------------- Without Redux Toolkit----------------------------------\r\n\r\n// import { ADD, REMOVE, FILTER } from './types';\r\n\r\n// export const addContactAction = payload => ({ type: ADD, payload });\r\n// export const removeContactAction = payload => ({ type: REMOVE, payload });\r\n// export const filterContactAction = payload => ({ type: FILTER, payload });\r\n\r\n//----------------------------------------------------------------------------\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport s from './Form.module.css';\r\nimport { addContactAction } from '../../redux/actions';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts.items);\r\n\r\n  const addContact = data => {\r\n    if (contacts.some(contact => contact.name.toLowerCase() === data.name.toLowerCase())) {\r\n      alert(`You have already had ${data.name} in your contacts`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      id: Date.now(),\r\n      name: data.name,\r\n      number: data.number,\r\n    };\r\n    dispatch(addContactAction(contact));\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const handleSubmite = event => {\r\n    event.preventDefault();\r\n    addContact({ name: name, number: number });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmite}>\r\n        <label>\r\n          <p>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            required\r\n            onChange={handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          <p>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { filterContactAction } from '../../redux/actions';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const filterContacts = event => {\r\n    dispatch(filterContactAction(event.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <label>\r\n      <p>Find contacts by name:</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        onChange={filterContacts}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\nimport { removeContactAction } from '../../redux/actions';\r\n\r\nexport default function Contact({ contact }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeContact = contact => {\r\n    dispatch(removeContactAction(contact.id));\r\n  };\r\n  return (\r\n    <li className={s.item}>\r\n      {contact.name}: {contact.number}{' '}\r\n      <button onClick={() => removeContact(contact)}>Delete</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  concact: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport Contact from '../Contact';\r\n\r\nexport default function ContactList() {\r\n  const { items, filter } = useSelector(state => state.contacts);\r\n\r\n  const getVisibleContacts = (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const visibleContacts = allContacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    return visibleContacts;\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {getVisibleContacts(items, filter).map(contact => (\r\n        <Contact key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children} </div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n","import s from './App.module.css';\r\nimport Form from './components/Form';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Container from './components/Container';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <Form />\r\n      <h2 className={s.contactsTitle}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App.jsx';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}